---
import Head from "@components/Head.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import { SITE } from "@consts";

type Props = {
  title: string;
  description: string;
};

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="zh-TW">
  <head>
    <Head title={`${title} | ${SITE.NAME}`} description={description} />
    
    <link 
      rel="stylesheet" 
      href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css"
      integrity="sha384-n8MVd4RsNIU0tAv4ct0nTaAbDJwPJzDEaqSD1odI+WdtXRGWt2kTvGFasHpSy3SV"
      crossorigin="anonymous"
    />
    
    <style is:global>
      /* 🔥 防止行內數學公式被拆開換行 */
      .katex:not(.katex-display) {
        white-space: nowrap !important;
        display: inline-block !important;
      }
      /* 🔥 精確針對主要內容區域的數學公式 */
      main.content .katex-display {
        display: block !important;
        text-align: center !important;
        margin: 1.5em auto !important;
        overflow-x: auto;
        overflow-y: hidden;
      }
      
      /* 基本 KaTeX 樣式 */
      .katex {
        color: inherit !important;
        font-size: 1.1em;
      }
      
      /* 確保行內數學不受影響 */
      main.content .katex:not(.katex-display) {
        display: inline !important;
        text-align: inherit !important;
        margin: 0 !important;
      }
      
      /* 深色主題兼容 */
      [data-theme="dark"] .katex,
      .dark .katex {
        color: #e5e7eb !important;
      }
    </style>
  </head>
  <body>
    <Header />
    <main class="content">  <!-- 🔥 加上 class -->
      <slot />
    </main>
    <Footer />
  </body>
  <script>
    // Footnote highlight functionality
    document.addEventListener('DOMContentLoaded', function() {
      console.log('Footnote script loaded');
      
      // Find all footnote-related elements
      const footnoteRefs = document.querySelectorAll('a[data-footnote-ref], a[href^="#user-content-fn-"]');
      const footnoteBackrefs = document.querySelectorAll('a[data-footnote-backref], a[href^="#user-content-fnref-"]');
      
      console.log('Found footnote refs:', footnoteRefs.length);
      console.log('Found footnote backrefs:', footnoteBackrefs.length);

      // Handle clicks on footnote references (in text)
      footnoteRefs.forEach(link => {
        link.addEventListener('click', function(e) {
          console.log('Footnote ref clicked:', this);
          const href = this.getAttribute('href');
          if (href) {
            setTimeout(() => {
              const target = document.querySelector(href);
              console.log('Target found:', target);
              if (target) {
                target.classList.add('footnote-highlight');
                console.log('Added highlight class');
                setTimeout(() => {
                  target.classList.remove('footnote-highlight');
                }, 1500);
              }
            }, 100);
          }
        });
      });

      // Handle clicks on footnote back references (back to text)
      footnoteBackrefs.forEach(link => {
        link.addEventListener('click', function(e) {
          console.log('Footnote backref clicked:', this);
          const href = this.getAttribute('href');
          if (href) {
            setTimeout(() => {
              const target = document.querySelector(href);
              console.log('Target found:', target);
              if (target) {
                target.classList.add('footnote-highlight');
                console.log('Added highlight class');
                setTimeout(() => {
                  target.classList.remove('footnote-highlight');
                }, 1500);
              }
            }, 100);
          }
        });
      });
    });
  </script>
</html>